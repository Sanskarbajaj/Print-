import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

public class TextInImage {

    public static void main(String[] args) {
        try {
            // Load the image
            BufferedImage image = ImageIO.read(new File("image.png"));

            // Convert text to binary
            String text = "This is a secret message";
            byte[] textBytes = text.getBytes();
            StringBuilder binaryText = new StringBuilder();
            for (byte b : textBytes) {
                binaryText.append(String.format("%8s", Integer.toBinaryString(b & 0xFF)).replace(' ', '0'));
            }

            // Hide the text in the image
            int textIndex = 0;
            for (int y = 0; y < image.getHeight(); y++) {
                for (int x = 0; x < image.getWidth(); x++) {
                    int pixel = image.getRGB(x, y);
                    if (textIndex < binaryText.length()) {
                        int bitToHide = Integer.parseInt(binaryText.substring(textIndex, textIndex + 1));
                        pixel = (pixel & 0xFFFFFFFE) | bitToHide; // Modify the least significant bit
                        image.setRGB(x, y, pixel);
                        textIndex++;
                    }
                }
            }

            // Save the modified image
            ImageIO.write(image, "png", new File("image_with_text.png"));

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

public class ExtractTextFromImage {

    public static void main(String[] args) {
        try {
            // Load the image with hidden text
            BufferedImage image = ImageIO.read(new File("image_with_text.png"));

            StringBuilder binaryText = new StringBuilder();
            int textIndex = 0;
            for (int y = 0; y < image.getHeight(); y++) {
                for (int x = 0; x < image.getWidth(); x++) {
                    int pixel = image.getRGB(x, y);
                    int leastSignificantBit = pixel & 1;
                    binaryText.append(leastSignificantBit);
                    textIndex++;
                    if (textIndex % 8 == 0) {
                        // Reached 8 bits, convert to a character
                        String binaryChar = binaryText.toString();
                        int charCode = Integer.parseInt(binaryChar, 2);
                        System.out.print((char) charCode);
                        binaryText.setLength(0); // Clear for the next character
                    }
                }
            }
            System.out.println(); // Newline to separate from other output

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
