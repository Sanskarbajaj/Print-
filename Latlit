import { LitElement, html, css } from 'lit';
import { customElement, property } from 'lit/decorators.js';

@customElement('initial-screen')
class InitialScreen extends LitElement {
  @property({ type: Boolean }) showForm = false;

  static styles = css`
    button {
      font-size: 16px;
      padding: 10px 20px;
      margin: 10px;
    }
  `;

  render() {
    return html`
      ${this.showForm
        ? html`<new-case-form @back="${this._handleBack}"></new-case-form>`
        : html`<button @click="${this._handleNewCase}">New Case</button>`
      }
    `;
  }

  _handleNewCase() {
    this.showForm = true;
  }

  _handleBack() {
    this.showForm = false;
  }
}





-----------



import { LitElement, html, css } from 'lit';
import { customElement } from 'lit/decorators.js';

@customElement('new-case-form')
class NewCaseForm extends LitElement {
  static styles = css`
    form {
      display: flex;
      flex-direction: column;
      width: 300px;
      margin: auto;
    }
    label {
      margin: 10px 0 5px;
    }
    input, select, button {
      padding: 10px;
      margin: 5px 0;
    }
    button {
      font-size: 16px;
    }
  `;

  render() {
    return html`
      <form @submit="${this._handleSubmit}">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required>

        <label for="age">Age:</label>
        <input type="number" id="age" name="age" required>

        <label for="gender">Gender:</label>
        <select id="gender" name="gender" required>
          <option value="">Select</option>
          <option value="male">Male</option>
          <option value="female">Female</option>
          <option value="other">Other</option>
        </select>

        <button type="submit">Submit</button>
        <button type="button" @click="${this._handleBack}">Back</button>
      </form>
    `;
  }

  _handleSubmit(event) {
    event.preventDefault();
    const formData = new FormData(event.target);
    const data = Object.fromEntries(formData);
    console.log('Form Data:', data);
    this._handleBack();
  }

  _handleBack() {
    this.dispatchEvent(new CustomEvent('back', { bubbles: true, composed: true }));
  }
}


---------
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Lit Components Example</title>
  <script type="module" src="./path-to-your-initial-screen.js"></script>
  <script type="module" src="./path-to-your-new-case-form.js"></script>
</head>
<body>
  <initial-screen></initial-screen>
</body>
</html>

