import org.w3c.dom.*;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import java.io.File;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class XMLUpdaterExample {

    public static void main(String[] args) {
        String filePath = "path/to/your/example.xml";

        List<String> parentNames = Arrays.asList("person1", "person2");
        List<String> parentAttributes = Arrays.asList("id1", "id2");
        
        // Child elements and attributes for each parent
        Map<String, List<String>> childElementNames = new HashMap<>();
        childElementNames.put("person1", Arrays.asList("child1", "child2"));
        childElementNames.put("person2", Arrays.asList("child3", "child4"));

        Map<String, List<String>> childElementAttributes = new HashMap<>();
        childElementAttributes.put("child1", Arrays.asList("attr1", "attr2"));
        childElementAttributes.put("child2", Arrays.asList("attr3", "attr4"));
        childElementAttributes.put("child3", Arrays.asList("attr5", "attr6"));
        childElementAttributes.put("child4", Arrays.asList("attr7", "attr8"));

        try {
            File xmlFile = new File(filePath);
            DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder docBuilder = docFactory.newDocumentBuilder();
            Document doc = docBuilder.parse(xmlFile);

            // Create parent elements with attributes
            for (int i = 0; i < parentNames.size(); i++) {
                Element parentElement = doc.createElement(parentNames.get(i));
                parentElement.setAttribute("id", parentAttributes.get(i));

                // Create child elements and attributes for each parent
                if (childElementNames.containsKey(parentNames.get(i))) {
                    List<String> childNames = childElementNames.get(parentNames.get(i));
                    List<String> childAttrs = childElementAttributes.get(parentNames.get(i));

                    for (int j = 0; j < childNames.size(); j++) {
                        Element childElement = doc.createElement(childNames.get(j));

                        // Add attributes for child elements
                        if (childAttrs != null && j < childAttrs.size()) {
                            childElement.setAttribute("attribute", childAttrs.get(j));
                        }

                        parentElement.appendChild(childElement);
                    }
                }

                // Append the parent element to the root
                doc.getDocumentElement().appendChild(parentElement);
            }

            // Save the changes back to the XML file
            TransformerFactory transformerFactory = TransformerFactory.newInstance();
            Transformer transformer = transformerFactory.newTransformer();
            DOMSource source = new DOMSource(doc);
            StreamResult result = new StreamResult(xmlFile);
            transformer.transform(source, result);

            System.out.println("XML file updated successfully!");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
