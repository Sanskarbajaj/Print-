import csv
import requests
from datetime import datetime

def get_repo_details(organization, project, repo_name, pat):
    headers = {
        'Content-Type': 'application/json',
        'Authorization': f'Basic {pat}'
    }

    # Get the last commit details
    commits_url = f"https://dev.azure.com/{organization}/{project}/_apis/git/repositories/{repo_name}/commits?api-version=6.0"
    commits_response = requests.get(commits_url, headers=headers)
    commits_data = commits_response.json()
    if commits_data['value']:
        last_commit = commits_data['value'][0]
        last_commit_date = last_commit['committer']['date']
        last_commit_author = last_commit['committer']['name']
    else:
        last_commit_date = 'N/A'
        last_commit_author = 'N/A'

    # Get the last build details
    builds_url = f"https://dev.azure.com/{organization}/{project}/_apis/build/builds?definitions={repo_name}&$top=1&api-version=6.0"
    builds_response = requests.get(builds_url, headers=headers)
    builds_data = builds_response.json()
    if builds_data['value']:
        last_build_date = builds_data['value'][0]['finishTime']
    else:
        last_build_date = 'N/A'

    return {
        'repo_name': repo_name,
        'last_commit_date': last_commit_date,
        'last_commit_author': last_commit_author,
        'last_build_date': last_build_date
    }

def process_repos(input_csv, output_csv, organization, project, pat):
    with open(input_csv, mode='r') as infile, open(output_csv, mode='w', newline='') as outfile:
        reader = csv.reader(infile)
        writer = csv.writer(outfile)
        writer.writerow(['repo_name', 'last_commit_date', 'last_commit_author', 'last_build_date'])

        for row in reader:
            repo_name = row[0]
            repo_details = get_repo_details(organization, project, repo_name, pat)
            writer.writerow([
                repo_details['repo_name'],
                repo_details['last_commit_date'],
                repo_details['last_commit_author'],
                repo_details['last_build_date']
            ])

def main():
    input_csv = 'input_repos.csv'  # Change this to your input CSV file path
    output_csv = 'output_repo_details.csv'  # Change this to your desired output CSV file path
    organization = 'your_organization'  # Replace with your Azure DevOps organization
    project = 'your_project'  # Replace with your Azure DevOps project
    pat = 'your_pat'  # Replace with your Azure DevOps PAT (Base64 encoded)

    process_repos(input_csv, output_csv, organization, project, pat)

if __name__ == '__main__':
    main()
