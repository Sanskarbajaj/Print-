import subprocess
import re
import os

def get_jdk_version(project_directory):
    # Check if the project directory exists
    if not os.path.exists(project_directory):
        return f"Error: Project directory '{project_directory}' not found."

    # Construct the path to the gradlew script in the project directory
    gradlew_path = os.path.join(project_directory, "gradlew")

    # Check if the gradlew script exists
    if not os.path.exists(gradlew_path):
        return f"Error: gradlew script not found in '{project_directory}'."

    try:
        # Run the Gradle properties command and capture the output
        result = subprocess.run([gradlew_path, "properties"], capture_output=True, text=True, check=True, cwd=project_directory)

        # Extract JDK version using regular expressions
        jdk_version_match = re.search(r'Java version: (.+)', result.stdout)

        if jdk_version_match:
            # Return the JDK version
            return jdk_version_match.group(1)
        else:
            return "JDK version not found in the output."

    except subprocess.CalledProcessError as e:
        # Handle command execution errors
        return f"Error: {e.stderr}"

# Example usage with an absolute path
absolute_path_to_project = "/path/to/your/project"
jdk_version = get_jdk_version(absolute_path_to_project)
print(f"JDK Version: {jdk_version}")
