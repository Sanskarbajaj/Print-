import com.clo.servlet.SCBReportExporterServlet;
import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletContext;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.HashMap;
import java.util.ResourceBundle;

import static org.mockito.Mockito.*;

public class SCBReportExporterServletTest {

    private SCBReportExporterServlet servlet;
    private HttpServletRequest request;
    private HttpServletResponse response;
    private ServletContext context;
    private RequestDispatcher dispatcher;

    @BeforeEach
    public void setUp() throws Exception {
        ResourceBundle mockBundle = mock(ResourceBundle.class);
        when(mockBundle.getString("reportDest")).thenReturn("reportDispatch.jsp");

        java.lang.reflect.Field field = SCBReportExporterServlet.class.getDeclaredField("reportDest");
        field.setAccessible(true);
        field.set(null, "reportDispatch.jsp");

        servlet = new SCBReportExporterServlet();
        request = mock(HttpServletRequest.class);
        response = mock(HttpServletResponse.class);
        context = mock(ServletContext.class);
        dispatcher = mock(RequestDispatcher.class);
    }

    @Test
    public void testService_withValidParams() throws Exception {
        when(request.getParameter("token")).thenReturn("123");
        when(request.getParameter("reportID")).thenReturn("456");
        when(request.getParameter("format")).thenReturn("pdf");
        when(request.getParameter("reportName")).thenReturn("On Demand");
        when(request.getParameterMap()).thenReturn(new HashMap<>());

        when(request.getServletContext()).thenReturn(context);
        when(context.getRequestDispatcher("/reports/reportDispatch.jsp")).thenReturn(dispatcher);

        servlet.service(request, response);

        verify(dispatcher).forward(request, response);
    }
}
